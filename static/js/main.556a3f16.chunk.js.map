{"version":3,"sources":["themes/default.js","themes/dark.js","context/Settings/SettingsContext.jsx","components/Drawer.jsx","components/Header.jsx","components/Note.jsx","components/CreateNote.jsx","App.js","context/Settings/SettingsProvider.jsx","index.js"],"names":["theme","createMuiTheme","typography","useNextVariants","palette","type","React","createContext","darkMode","withStyles","root","position","top","left","drawer","width","drawerItem","padding","textField","marginLeft","spacing","unit","marginRight","classes","align","context","useContext","SettingsContext","useState","open","setOpen","className","IconButton","color","aria-label","onClick","Typography","fontSize","SwipeableDrawer","anchor","onClose","onOpen","Divider","FormControlLabel","control","Switch","checked","onChange","onSetDarkMode","label","paddingLeft","AppBar","Toolbar","edge","variant","Note","props","dValue","setDValue","onMouseOver","onMouseOut","title","note","style","display","onDelete","id","CreateNote","keepNote","setKeepNote","dstate","setDstate","noteList","setNoteList","noteInput","event","target","value","name","preNote","deleteItem","preNotes","filter","element","index","onDoubleClick","onSubmit","preventDefault","autoComplete","placeholder","required","rows","class","aria-hidden","map","currentElement","key","App","darkTheme","defaultTheme","CssBaseline","storage","localStorage","getItem","setItem","SettingsProvider","setDarkMode","Provider","children","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.556a3f16.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    type: 'light',\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\n\r\n\r\nexport default React.createContext({\r\n  darkMode: false,\r\n});","import React, { useState, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SettingsContext from '../context/Settings/SettingsContext';\r\n// import EmojiObjectsIcon from '../../node_modules/@material-ui/icons/EmojiObjects';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: 'fixed',\r\n    top: 5,\r\n    left: 5,\r\n  },\r\n  drawer: {\r\n    width: 250,\r\n  },\r\n  drawerItem: {\r\n    padding: 15,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 200,\r\n  },\r\n});\r\nconst Drawer = ({ classes, align = 'right' }) => {\r\n  const context = useContext(SettingsContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"Settings\"\r\n        onClick={() => setOpen(true)}\r\n      >\r\n        <Typography>\r\n          <MenuIcon fontSize=\"large\" />\r\n        </Typography>\r\n      </IconButton>\r\n      <SwipeableDrawer\r\n        anchor={align}\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n      >\r\n        <div className={classes.drawer}>\r\n\r\n          {/* <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" className=\"iconBtn\">\r\n            <EmojiObjectsIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <Typography variant=\"h5\">\r\n            <span className=\"brandName\">Keep</span>\r\n          </Typography> */}\r\n\r\n          <Divider />\r\n          <div className={classes.drawerItem}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={context.darkMode}\r\n                  onChange={() => context.onSetDarkMode(!context.darkMode)}\r\n                />\r\n              }\r\n              label=\"Dark Mode\"\r\n            />\r\n\r\n          </div>\r\n        </div>\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n};\r\nDrawer.propTypes = {\r\n  classes: PropTypes.object,\r\n  align: PropTypes.string,\r\n};\r\nexport default withStyles(styles)(Drawer);","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport EmojiObjectsIcon from '../../node_modules/@material-ui/icons/EmojiObjects';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './Header.css';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        paddingLeft: 55,\r\n    },\r\n  });\r\n\r\nconst Header = ({classes}) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\" className=\"bg-warning py-1\">\r\n                <Toolbar className={classes.root}>\r\n\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" className=\"iconBtn\">\r\n                        <EmojiObjectsIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n\r\n                    <Typography variant=\"h5\">\r\n                        <span className=\"brandName\">Google Keep Clone</span>\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}\r\nHeader.propTypes = {\r\n    classes: PropTypes.object,\r\n  };\r\nexport default withStyles(styles) (Header);","import React, { useState } from 'react';\r\nimport './Note.css';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst Note = (props) => {\r\n    const [dValue, setDValue] = useState(false);\r\n\r\n    const deleteShow = () => setDValue(true);\r\n    const deleteHide = () => setDValue(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-lg-4 col-sm-6 col-12 px-4 my-4 h-100\">\r\n                <div className=\"px-3 py-4 shadow-lg rounded card-note\" onMouseOver={deleteShow} onMouseOut={deleteHide}>\r\n                    <h5>{props.title}</h5>\r\n                    <hr />\r\n                    <p>{props.note}</p>\r\n                    <button type=\"button\"\r\n                        className=\"deleteBtn\"\r\n                        style={{ display: dValue ? \"block\" : \"none\" }}\r\n                        onClick={() => props.onDelete(props.id)}>\r\n                        <DeleteIcon className=\"btnIcon\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Note;","import React, { useState } from 'react';\r\nimport Note from './Note';\r\nimport './CreateNote.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst CreateNote = () => {\r\n\r\n    // OnChange States of input and textarea\r\n    const [keepNote, setKeepNote] = useState({ title: '', note: ''  });\r\n\r\n    // Display State of Form\r\n    const [dstate, setDstate] = useState(false);\r\n\r\n    // List of Objects containing Titles and Notes Properties\r\n    const [noteList, setNoteList] = useState([]);\r\n\r\n    // OnChange Events of input and textarea\r\n    const noteInput = (event) => {\r\n        const {value, name} = event.target;\r\n\r\n        setKeepNote((preNote) => {\r\n            if(name === 'title') {\r\n                return {\r\n                    title: value,\r\n                    note: preNote.note\r\n                };\r\n            }\r\n            else if(name === 'note') {\r\n                return {\r\n                    title: preNote.title,\r\n                    note: value\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    // On the Submission of Form\r\n    const submitInfo = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Empty the Fields\r\n        setKeepNote({ \r\n            title: '', note: '' \r\n        });\r\n\r\n        // Store Tasks\r\n        setNoteList((preNote) => {\r\n            return [\r\n                ...preNote,\r\n                keepNote\r\n            ];\r\n        });\r\n    }\r\n\r\n    const deleteItem = (id) => {\r\n\r\n        setNoteList((preNotes) => {\r\n           return preNotes.filter((element, index) => {\r\n               return index !== id;\r\n           });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"mt-4 p-2 mx-auto\" \r\n                onClick={() => setDstate(true)} \r\n                onDoubleClick={() => setDstate(false)} \r\n                onSubmit={submitInfo} autoComplete=\"off\">\r\n\r\n                <input type=\"text\" placeholder=\"Title\" name=\"title\"\r\n                    className=\"form-control\" onChange={noteInput}\r\n                    value={keepNote.title} style={{ display: dstate ? \"block\" : \"none\" }} required />\r\n\r\n                <textarea placeholder=\"Write a Note\" name=\"note\"\r\n                    onChange={noteInput} className=\"form-control\" rows=\"3\" value={keepNote.note}>\r\n                </textarea>\r\n\r\n                <button type=\"submit\"><i class=\"fa fa-location-arrow\" aria-hidden=\"true\"></i></button>\r\n            </form>\r\n\r\n            <div className=\"container mt-5 pt-3\">\r\n                <div className=\"row\">\r\n                    {\r\n                        noteList.map((currentElement, index) => {\r\n                            return <Note key={index} \r\n                                title={currentElement.title} \r\n                                note={currentElement.note} \r\n                                id={index}\r\n                                onDelete={deleteItem}     \r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreateNote;","import React, { useContext } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport defaultTheme from './themes/default';\r\nimport darkTheme from './themes/dark';\r\nimport './App.css';\r\nimport Drawer from './components/Drawer';\r\nimport Header from './components/Header';\r\nimport CreateNote from './components/CreateNote';\r\nimport SettingsContext from './context/Settings/SettingsContext';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: '100%',\r\n  },\r\n  paper: {\r\n    width: 350,\r\n    height: 400,\r\n  },\r\n});\r\n\r\n\r\nconst App = ({ classes }) => {\r\n  const context = useContext(SettingsContext);\r\n  const theme = context.darkMode ? darkTheme : defaultTheme;\r\n\r\n\r\n  return (\r\n    <>\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Header />\r\n        <CreateNote />\r\n        <Drawer align=\"left\" />\r\n      </MuiThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React, { useState } from 'react';\r\nimport SettingsContext from './SettingsContext';\r\n\r\n\r\n\r\n// Save settings to local storage\r\nconst storage = {\r\n  getItem(key) {\r\n    if (localStorage) {\r\n      return localStorage.getItem(key);\r\n    }\r\n  },\r\n  setItem(key, value) {\r\n    if (localStorage) {\r\n      return localStorage.setItem(key, value);\r\n    }\r\n  },\r\n};\r\nconst SettingsProvider = props => {\r\n  const [darkMode, setDarkMode] = useState(\r\n    storage.getItem('darkMode') === 'true'\r\n  );\r\n  const onSetDarkMode = darkMode => {\r\n    setDarkMode(darkMode);\r\n    storage.setItem('darkMode', darkMode);\r\n  };\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{\r\n        darkMode,\r\n        onSetDarkMode,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\nexport default SettingsProvider;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport SettingsProvider from './context/Settings/SettingsProvider';\r\n\r\n\r\nReactDOM.render(\r\n  <SettingsProvider>\r\n  <App />\r\n</SettingsProvider>, \r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}